import Head from 'next/head'
import { useEffect, useState, useContext } from 'react'
import { Tab } from '@headlessui/react'

import MainMenu from '../components/MainMenu'
import Footer from '../components/Footer'
import AboutMe from '../components/AboutMe'
import Project from '../components/Project'
import Welcome from '../components/Welcome'
import Experience from '../components/Experience'
import 'devtools-detect'
import Mode from '../components/Mode'
import { AppContext } from '../context/state'
import Skill from '../components/Skill'

const project = [
  {
    name: 'Hidden Nginx',
    stack: 'Nginx | Raspberry Pi | HTML',
    description: 'A web application which deployed through a Tor hidden service on a Rasberry Pi server.',
    type: 'text',
  },
  {
    name: 'Go Generator',
    stack: 'Go',
    description: 'A PHP template generator written in Go.',
    type: 'git',
  },
  {
    name: 'Portfolio',
    stack: 'NestJS | ReactJS | Tailwind',
    description: 'My portfolio',
    type: 'web',
  },
]

const experience = [
  {
    name: '.NFQ ASIA',
    date: 'Nov 2021 - present',
    position: 'Full-stack Developer',
    language: 'PHP/MySQL/Javascript development',
    skill: 'Symfony | VueJS | ReactJS | Docker | CI ',
    type: 'work',
  },
  {
    name: 'iDealogic',
    date: 'Jun 2021 - Oct 2021',
    position: 'Full-stack Developer',
    language: 'PHP/MySQL/Javascript development',
    skill: 'Lumen | ReactJS | Docker',
    type: 'work',
  },
  {
    name: 'Neolab VN',
    date: 'Jul 2020 - May 2021',
    position: 'Full-stack Developer',
    language: 'PHP/MySQL/Javascript development',
    skill: 'Laravel | VueJS | Docker',
    type: 'work',
  },
  {
    name: 'Ambition VN',
    date: 'May 2019 - June 2020',
    position: 'Full-stack Developer',
    language: 'PHP/MySQL/Javascript development',
    skill: 'Laravel | VueJS | Docker',
    type: 'work',
  },
  {
    name: 'LeanTech',
    date: 'Feb 2018 - Apr 2019',
    position: 'Intern & Developer',
    language: 'PHP/MySQL/Javascript development',
    skill: 'Golang | ReactJS | Docker',
    type: 'work',
  },
  {
    name: 'FPT APTECH',
    date: 'Feb 2017 - Aug 2018',
    position: 'IT Student',
    language: '',
    skill: '',
    type: 'education',
  },
]

const skill = {
  tech: [
    { icon: 'devicon-typescript-plain', name: 'Typescript' },
    { icon: 'devicon-html5-plain', name: 'HTML' },
    { icon: 'devicon-go-plain', name: 'Go' },
    { icon: 'devicon-css3-plain', name: 'CSS' },
    { icon: 'devicon-javascript-plain', name: 'Javascript' },
    { icon: 'devicon-laravel-plain', name: 'Laravel' },
    { icon: 'devicon-mysql-plain', name: 'MySQL' },
    { icon: 'devicon-nestjs-plain', name: 'NestJS' },
    { icon: 'devicon-nginx-original', name: 'Nginx' },
    { icon: 'devicon-react-original', name: 'ReactJS' },
    { icon: 'devicon-tailwindcss-plain', name: 'Tailwindcss' },
    { icon: 'devicon-storybook-plain', name: 'Storybook' },
    { icon: 'devicon-vuejs-plain', name: 'VueJS' },
  ],
  tool: [
    { icon: 'devicon-azure-plain', name: 'Azure Devops' },
    { icon: 'devicon-docker-plain', name: 'Docker' },
    { icon: 'devicon-git-plain', name: 'Git' },
    { icon: 'devicon-jira-plain', name: 'Jira' },
    { icon: 'devicon-ubuntu-plain', name: 'Ubuntu' },
  ],
}

function classNames(...classes) {
  return classes.filter(Boolean).join(' ')
}

export default function Home() {
  const [devtoolStatus, setDevtoolStatus] = useState(false)
  const [isWeb, setIsWeb] = useState(false)
  const [categories] = useState(['Project', 'Experience', 'Skill'])
  const { mode } = useContext(AppContext)

  const handleDevtoolDetect = (event) => {
    if (!/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent)) {
      setDevtoolStatus(event.detail.isOpen)
    }
  }

  useEffect(() => {
    setIsWeb(!/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent))
    window.addEventListener('devtoolschange', handleDevtoolDetect)
    return () => {
      window.removeEventListener('devtoolschange', handleDevtoolDetect)
    }
  }, [])

  return (
    <div className={'px-5 pt-40 ' + (mode ? 'bg-black text-white' : 'bg-sky-50 text-slate-900')}>
      <Head>
        <title>Nam Nguyen</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&amp;display=swap" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={devtoolStatus ? 'hidden' : 'block'}>
        <Mode />
        <MainMenu />
        <Welcome />
        <AboutMe />
        <div className="max-w-4xl mx-auto px-2 py-16 sm:px-0">
          <Tab.Group>
            <Tab.List className={'flex p-1 space-x-1 rounded-xl ' + (mode ? 'bg-black' : '')}>
              {categories.map((category) => (
                <Tab
                  key={category}
                  className={({ selected }) =>
                    classNames(
                      'w-full py-2.5 text-base leading-5 font-medium rounded-lg focus:outline-none transition ease-in-out delay-75 hover:-translate-y-1 hover:scale-110 duration-300',
                      selected
                        ? ('shadow ' + (mode ? 'bg-white text-black' : 'bg-sky-300 text-white'))
                        : (mode ? 'text-white hover:bg-white hover:text-black' : 'text-slate-900 hover:bg-sky-200 hover:text-white'),
                    )
                  }
                >
                  {category}
                </Tab>
              ))}
            </Tab.List>
            <Tab.Panels className="mt-2">
              <Tab.Panel className={'rounded-xl px-3 focus:outline-none ' + (mode ? 'bg-black' : '')}>
                <Project project={project} />
              </Tab.Panel>
              <Tab.Panel className={'rounded-xl px-3 focus:outline-none ' + (mode ? 'bg-black' : '')}>
                <Experience experience={experience} animate={isWeb} />
              </Tab.Panel>
              <Tab.Panel className={'rounded-xl px-3 focus:outline-none ' + (mode ? 'bg-black' : '')}>
                <Skill skill={skill} />
              </Tab.Panel>
            </Tab.Panels>
          </Tab.Group>
        </div>
        <Footer />
      </div>
    </div>
  )
}
